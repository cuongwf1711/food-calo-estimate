# Copyright (C)
# date: 09-05-2025
# author: cuongwf1711
# email: ruivalien@gmail.com

# Django
DJANGO_SECRET_KEY=DJANGO_SECRET_KEY
DEBUG=DEBUG
MAIN_URL=MAIN_URL

# Database
DB_ENGINE=DB_ENGINE
DB_NAME=DB_NAME
DB_USER=DB_USER
DB_PASSWORD=DB_PASSWORD
DB_HOST=DB_HOST
DB_PORT=DB_PORT

# Account defaults
ADMIN_USERNAME=ADMIN_USERNAME
ADMIN_PASSWORD=ADMIN_PASSWORD
DUMMY_USERNAME=DUMMY_USERNAME
DUMMY_PASSWORD=DUMMY_PASSWORD

# Email
EMAIL_BACKEND=EMAIL_BACKEND
EMAIL_HOST=EMAIL_HOST
EMAIL_PORT=EMAIL_PORT
EMAIL_HOST_USER=EMAIL_HOST_USER
EMAIL_HOST_PASSWORD=EMAIL_HOST_PASSWORD
EMAIL_USE_TLS=EMAIL_USE_TLS
CONTACT_EMAIL=CONTACT_EMAIL

# Redis configuration
REDIS_HOST=REDIS_HOST
REDIS_PORT=REDIS_PORT
REDIS_DEFAULT_DB=REDIS_DEFAULT_DB

# Celery configuration
CELERY_BROKER_URL=CELERY_BROKER_URL
REDIS_DB_CELERY_RESULT_BACKEND=REDIS_DB_CELERY_RESULT_BACKEND

# Cloudinary settings
CLOUDINARY_CLOUD_NAME=CLOUDINARY_CLOUD_NAME
CLOUDINARY_API_KEY=CLOUDINARY_API_KEY
CLOUDINARY_API_SECRET=CLOUDINARY_API_SECRET
PREFIX_PUBLIC_CLOUDINARY_URL=PREFIX_PUBLIC_CLOUDINARY_URL

# API key for DINOX
API_KEY_DINOX=API_KEY_DINOX


# azure:
# sudo apt-get install screen

# screen -S django-rest-server-api

# python manage.py runserver

# screen -S celery-server
 # celery ...

# screen -ls
# screen -r django-api
# exit
# echo $STY, echo $TERM
python manage.py runserver 0.0.0.0:8000 --noreload



# Django  # python manage.py
# python3 -c 'from django.utils.crypto import get_random_string; print(get_random_string(50))'

# pyenv local 3.12
# https://medium.com/@aashari/easy-to-follow-guide-of-how-to-install-pyenv-on-ubuntu-a3730af8d7f0

# github config
# ssh-keygen -t ed25519 -C "ruivalien@gmail.com"
# eval "$(ssh-agent -s)"
# ssh-add ~/.ssh/id_ed25519
# cat ~/.ssh/id_ed25519.pub
# ssh -T git@github.com


# poetry install
# curl -sSL https://install.python-poetry.org | python3 -
# echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc
# source ~/.bashrc
# poetry --version
# poetry self add poetry-plugin-shell
# poetry shell
# poetry install

# docker install
# sudo apt update
# sudo apt install docker.io
# sudo systemctl enable --now docker
# exit
# sudo usermod -aG docker $USER
# newgrp docker
# poetry shell
# docker run 


# Database
# docker run -d -p 5432:5432 \
#   -e POSTGRES_DB=DB_NAME \
#   -e POSTGRES_USER=DB_USER \
#   -e POSTGRES_PASSWORD=DB_PASSWORD \
#   postgres
# sudo service docker start


# Celery
# celery -A FoodCaloEstimate.celery worker -l INFO -E (windows -P solo)

celery -A FoodCaloEstimate.celery worker -l INFO \
  --concurrency=8 \
  --max-tasks-per-child=10 \
  --max-memory-per-child=$((64 * 1024))
# clear queue message: celery -A FoodCaloEstimate.celery purge -f
# use RabbitMQ as broker  # docker run -d -p 5672:5672 rabbitmq